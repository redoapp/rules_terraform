load("//terraform:platform.bzl", "PLATFORMS", "cpu_constraints", "os_constraints", "parse_platform")
load("//terraform:rules.bzl", "tf_platform_toolchain", "tf_toolchain", "tf_toolchain_terraform")
load(":terraform.bzl", "TERRAFORM")

tf_toolchain_terraform(
    name = "terraform",
    visibility = ["//visibility:public"],
)

[
    tf_platform_toolchain(
        name = "platform_%s_%s" % (
            platform.os,
            platform.arch,
        ),
        arch = platform.arch,
        os = platform.os,
        visibility = ["//visibility:public"],
    )
    for platform in PLATFORMS
]

[
    toolchain(
        name = "terraform_%s_%s_toolchain" % (os_name, cpu_name),
        target_compatible_with = [
            cpu,
            os,
        ],
        toolchain = "@terraform_%s//:tf" % platform,
        toolchain_type = "//terraform:toolchain_type",
    )
    for platform in {platform: None for value in TERRAFORM.values() for platform in value.keys()}.keys()
    for os_name, os in os_constraints(parse_platform(platform).os).items()
    for cpu_name, cpu in cpu_constraints(parse_platform(platform).arch).items()
]

[
    toolchain(
        name = "platform_%s_%s_toolchain" % (os_name, cpu_name),
        target_compatible_with = [
            cpu,
            os,
        ],
        toolchain = "//terraform/default:platform_%s_%s" % (
            platform.os,
            platform.arch,
        ),
        toolchain_type = "//terraform:platform_toolchain",
    )
    for platform in PLATFORMS
    for os_name, os in os_constraints(platform.os).items()
    for cpu_name, cpu in cpu_constraints(platform.arch).items()
]
